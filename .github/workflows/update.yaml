---
on:
  schedule:
    - cron: '39 2 * * *'
  push:
    branches:
      - main
    paths:
      - base_version
  workflow_dispatch:
    inputs:
      skip_checks:
        description: |
          Skip all checks and updates; Generate and publish directly
        required: false
        default: false
        type: boolean

name: Generate Emojis
jobs:
  check:
    runs-on: ubuntu-latest
    name: Check for Updates
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Check for new releases
        id: release-check
        run: |
          cd unicode-emoji-json
          emojiJsonRelease=$(gh api repos/muan/unicode-emoji-json/releases/latest -q .tag_name)
          echo "::set-output name=emojiJsonRelease::$emojiJsonRelease"
          cd ../twemoji
          twemojiRelease=$(gh api repos/twitter/twemoji/releases/latest -q .tag_name)
          echo "::set-output name=twemojiRelease::$twemojiRelease"
          cd ..
          if [[ $emojiJsonRelease == $(git -C unicode-emoji-json describe) ]]
          then
            if [[ ! $(git -C gemoji log ..origin/master --oneline) ]]
            then
              echo "::set-output name=metadataStatus::up-to-date"
            fi
          fi
          if [[ $twemojiRelease == $(git -C twemoji describe) ]]
          then
            echo "::set-output name=twemojiStatus::up-to-date"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      emojiJsonRelease: ${{ steps.release-check.outputs.emojiJsonRelease }}
      twemojiRelease: ${{ steps.release-check.outputs.twemojiRelease }}
      metadataStatus: ${{ steps.release-check.outputs.metadataStatus }}
      twemojiStatus: ${{ steps.release-check.outputs.twemojiStatus }}

  update-metadata:
    runs-on: ubuntu-latest
    needs:
      - check
    name: Update Emoticon metadata
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        if: "inputs.skip_checks || needs.check.outputs.metadataStatus != 'up-to-date'"
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Update submodules
        if: "inputs.skip_checks || needs.check.outputs.metadataStatus != 'up-to-date'"
        run: |
          git -C unicode-emoji-json fetch --tags
          git -C unicode-emoji-json checkout ${{ needs.check.outputs.emojiJsonRelease }}
          git -C gemoji fetch
          git -C gemoji checkout origin/master
      - name: Generate metadata
        if: "inputs.skip_checks || needs.check.outputs.metadataStatus != 'up-to-date'"
        run: python3 metadata-generator.py
      - name: Commit updates
        id: auto-commit
        if: "inputs.skip_checks || needs.check.outputs.metadataStatus != 'up-to-date'"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update to latest metadata dependencies
      - name: Set outputs
        if: "inputs.skip_checks || needs.check.outputs.metadataStatus != 'up-to-date'"
        run:
          if [[ ${{ steps.auto-commit.outputs.changes_detected }} == "false" ]]
          then
            echo "::set-output name=metadataStatus::up-to-date"
          fi
    outputs:
      metadataStatus: ${{ steps.release-check.outputs.metadataStatus }}

  generate:
    runs-on: ubuntu-latest
    needs:
      - check
      - update-metadata
    if: "inputs.skip_checks || github.event_name == 'push' || needs.check.outputs.metadataStatus != 'up-to-date' || needs.check.outputs.twemojiStatus != 'up-to-date'"
    name: Generate Twemoji Set and Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Update twemoji submodule
        run: |
          git -C twemoji fetch --tags
          git -C twemoji checkout ${{ needs.check.outputs.twemojiRelease }}
      - name: Generate Twemoji set
        id: generate
        run: |
          python3 generator.py
          base_version=$(cat base_version)
          echo "::set-output name=version::${base_version}-twe-${{ needs.check.outputs.twemojiRelease }}-emojidata-$(git log --format=%h metadata.json)"
          echo "::set-output name=base_version::$base_version"
          cd generated
          tar -czf ../twemoji-for-jabber.tar.gz *
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update twemoji version
      - name: Publish release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: ${{ steps.generate.outputs.version }}
          title: Version ${{ steps.generate.outputs.base_version }} (Twemoji ${{ needs.check.outputs.twemojiRelease }} | Unicode Data ${{ needs.check.outputs.emojiJsonRelease }})
          files: |
            *.tar.gz
